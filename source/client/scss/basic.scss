@import "const";
@import "mixins";

html, body {
    margin: 0;
    padding: 0;
    background: $colorBack;
    font-family: Verdana, Geneva, sans-serif;
    font-size: 18px;
}

[contenteditable=true]:empty:before{
    content: attr(placeholder);
    display: block;
    color: lightgray;
}

.errorMessage {
    color: $colorP2;
}

.central {

    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    display: table;

    > div {

        display: table-cell;
        vertical-align: middle;
        text-align: center;

        > div {
            display: inline-block;
        }

    }

}

select {

    vertical-align: top;
    cursor: pointer;
    background: none;
    border: none;
    font: inherit;
    outline: 0;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    @include transition($defaultTransition);

    &::-ms-expand {
        display: none;
    }

    &:hover {
        color: $colorP2;
    }

}

.toggle {

    position: relative;
    width: 30px;
    height: 16px;
    display: inline-block;
    vertical-align: top;

    > input[type=checkbox] {
        visibility: hidden;
    }

    > input[type=checkbox] + label {

        cursor: pointer;
        position: absolute;
        display: block;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background: $colorP2;
        border-radius: 8px;
        box-shadow: 1px 1px 1px rgba(0, 0, 0, 0.3) inset;
        @include transition($defaultTransition);

        &:after {
            position: absolute;
            content: "";
            top: 1px;
            left: 1px;
            width: 14px;
            height: 14px;
            background: white;
            border-radius: 8px;
            box-shadow: 0 0 1px rgba(0, 0, 0, 0.3);
            @include transition($defaultTransition);
        }

    }

    > input[type=checkbox]:checked + label {

        background: $colorP3;

        &:after {
            left: 15px;
        }

    }

}

input[type=text] {

    box-sizing: border-box;
    background: transparent;
    border: none;
    outline: none;
    border-bottom: 1px solid lightgray;
    @include transition($defaultTransition);

    &:hover {
        box-shadow: inset 0px -6px 0 -4px rgba($colorP3, .7);
    }

    &:focus {
        box-shadow: none !important;
    }

}

.hidden-select {

    background-color: transparent;
    border: none;
    padding-top: $medium;
    font: inherit;
    outline: 0;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;

    &::-ms-expand {
        display: none;
    }

    > option {
        color: black;
    }

}

.inline {
    vertical-align: top;
    display: inline-block;
}

.float-right {
    float: right;
}

.card {
    background: $colorFront;
    box-sizing: border-box;
    margin: $defaultMargin;
    padding: $defaultPadding;
    border-radius: 3px;
    box-shadow: $defaultShadow;
}

.page {

    > .header, .footer {

        position: fixed;
        &.header { top: 0; }
        left: 0;
        right: 0;
        z-index: $zIndexTop;
        height: $big;
        background: $colorFront;
        box-shadow: $defaultShadow;
        padding: $defaultPadding;
        box-sizing: border-box;

        .panel {

            position: relative;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;

            .icon {

                margin: 0 $defaultMargin 0 0;
                cursor: pointer;

            }

            .title {

                font-size: 24px;
                font-weight: bold;
                vertical-align: middle;

                .topNamespace {

                    vertical-align: baseline;

                }

            }

            > .controls {
                position: relative;
                z-index: 2; /* This fixes select's element overflow z-index wrong behavior */
                background: $colorFront;
            }

            #saveIndicator {
                display: none;
            }

        }

    }

    > .footer {

        bottom: 0;
        @include transition($defaultTransition);

        &.expanded {

            bottom: $bottomBarHeight;

            & + #footer-terminal {
                height: $bottomBarHeight;
            }

            & ~ .body {
                margin-bottom: calc(#{$bottomBarHeight} + #{$big});
            }

        }

    }

    #footer-terminal {

        position: fixed;
        overflow: hidden;
        height: 0;
        bottom: 0;
        left: 0;
        width: 100%;
        background: $colorFront;
        z-index: $zIndexTop;
        @include transition($defaultTransition);

        > iframe {
            width: 100%;
            height: 100%;
            overflow: auto;
        }

    }

    > .body {
        margin: $defaultMargin+$big $defaultMargin $defaultMargin+$big $defaultMargin;
    }

}